
#include <iostream>

//class 내부에 정의된 변수 중에 자료형의 크기가 가장큰 것을 기준으로 바구니 담듯이 변수에 메모리 영역을 할당. 
//클래스의 변수 선언시 빈공간이 생기는 영역을 패딩바이트라함

//큰 메모리 영역을 가진 변수를 기준으로 cpu가 메모리에 접근을 하다보니 그보다 메모리가 작은 변수들은 한번 접근했을때 한꺼번에 접근하게 된다.
//메모리가 좀 낭비되더라도 CPU가 메모리에 접근하는 횟수를 줄임 == 처리시간 상승 == 성능향상


class A
{
public:
    int a;   //8바이트 할당
    short b;
    __int64 c; //8바이트 할당
};


int main()
{
    std::cout << "Hello World!\n";
}


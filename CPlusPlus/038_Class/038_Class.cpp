
#include <iostream>

//c++은 c를 기반문법으로 객체지향을 추가하고 다른 언어에서 좋다고 칭찬받은 문법을 마구잡이로 흡수한 언어이다.

class Player
{
	//객체의 속성(맴버변수)
	const char* Name = "Player";
	int Att;
	int Hp;

	//객체의 행동
	void Run()
	{

	}

	void damage()
	{

	}
};




int main()
{
	/*
	c는 데이터를 기반으로 시작한다. (기본 능력치를 변수로 정의)
	그 후 행동을 정의한다. (함수)
	데이터(상태)와 함수(동작)로만 모든걸 표현한다.
	*/
	//따라서 객체라는 인간이 생각해내는 추상적인 개념을 c언어는 구현할 수 없음(어떤 존재 그 자체를 정의 할 방법이 c언어에는 없음. 그저 어떤 상태(데이터), 어떤 동작(함수)만 정의할 수 있음)
	//객체지향은 이런 객체라는 껍데기를 먼저 만들어주고 그 안에 데이터(상태)와 함수(동작)가 구현되게 한다. - 캡슐화. 추상화.
	
	//c++에서는 클래스가 모든것을 만들 수 있는 문법이다
	//c++에서 int도 결국 클래스라는 개념이 적용된다는걸 알수 있다.
	//class도 사용자 정의 자료형중 하나이다.

	Player NewPlayer = Player();
	Player PlayerArr[3];
	int Value = int();
}

